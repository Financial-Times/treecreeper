
// field locking
describe('lockedFields', () => {});
it('throws an error when trying to write a field that is locked by another clientId', async () => {});
it('writes a field that is unlocked', async () => {});
it('writes a field that is locked by the same clientId', async () => {});
it('throws an error when trying to lock a field that is locked by another clientId', async () => {});
it('updates node by updating field and locking ALL edited fields', async () => {});
it('updates node by updating someString and adding it as a locked field', async () => {});
it('updates node that is locked by this clientId', async () => {});
it('does NOT update node with locked field when it is has already locked it (no duplicates)', async () => {});
it('adds another field to locked fields', async () => {});
it('does NOT lock existing fields when those fields are locked by another clientId', async () => {});
it('does NOT modify lock fields when just updating locked and unlocked fields', async () => {});
it('only locks fields that are given in the query but updates all fields', async () => {});
it('creates a new node with locked fields when no exisitng node exists', async () => {});
it('does NOT overwrite existing locked fields when lockFields=all is set', async () => {});
it('can lock fields without having to send any data changes', async () => {});
it('can lock fields when sending values that make no changes', async () => {});
describe('no client-id header', () => {});
it('throws an error when clientId is not set', async () => {});
describe('unlocking fields', () => {});
it('unlocks fields when request is given', async () => {});
it('unlocks fields when request is given by a different clientId that locked it', async () => {});
it('unlocks `all` fields', async () => {});
it('unlocks the locked field when value sent make no changes', async () => {});
it('unlocks a locked field and writes new value in same request', async () => {});
it('unlocks a locked field and writes new locked value in same request', async () => {});
describe('no value changes', () => {});
it('unlocks `all` fields', async () => {});
it('unlocks the only locked field', async () => {});
