name: System
description: Any combination of software and technical infrastructure used by the business, engineering or operations
rank: 20
properties:
  code:
    type: Code
    required: true
    unique: true
    canIdentify: true
    isCore: true
    pattern: CODE
    label: Code
    fieldset: general
    description: Unique code/id for this item. Once created it should (in most cases) never be altered.
  name:
    type: Name
    canIdentify: true
    isCore: true
    label: Name
    description: Display name of the system.
    fieldset: general
  description:
    type: Paragraph
    canIdentify: true
    label: Description
    description: Brief overview of what the system does and how.
    fieldset: general
  primaryURL:
    type: Url
    canIdentify: true
    isCore: true
    label: Primary URL
    description: The main url served by the system.
    fieldset: general
  systemType:
    type: Word
    canFilter: true
    label: System type
    description: The system type (don't worry about entering anything here).
    deprecationReason: 'Was never used or populated'
    fieldset: general
  serviceTier:
    type: ServiceTier
    canFilter: true
    isCore: true
    label: Service tier
    description: The system's service tier level.
    fieldset: general
  serviceType:
    type: Word
    canFilter: true
    label: Service type
    description: The type of service the system provides  (don't worry about entering anything here).
    deprecationReason: 'Was never used or populated'
    fieldset: general
  hostPlatform:
    type: Word
    canFilter: true
    label: Host platform
    description: The platform the service is hosted on, e.g. Heroku.
    fieldset: general
  dataOwner:
    type: Person
    direction: outgoing
    label: GPDR data owner
    relationship: HAS_DATA_OWNER
    description: |
      The individual responsible for managing GDPR requests for this system.
    hasMany: false
    fieldset: personalData
  containsPersonalData:
    type: Boolean
    canFilter: true
    label: Does this system store or process Personal Data?
    description: |
      Personal data means any information from which an individual can be
      identified directly or indirectly.
      For Personal Data this includes: Full name and title, email address,
      physical address, contact number, location data, online identifiers
      (e.g. IP Address, cookies, MAC Addresses, pixel tags, account handles,
      device finger prints, username and passwords), government identifiers
      (e.g. passport, drivers license), signatures, workplace data (e.g.
      salary/bonus/annual reviews), gender, date of birth.
    fieldset: personalData
  containsSensitiveData:
    type: Boolean
    canFilter: true
    label: Does this system store or process Sensitive Data?
    description: |
      Sensitive, or special category data, is a more regulated subset of
      personal data, including race, ethnic origin, politics, religion,
      trade union membership, genetics, biometrics (where used for ID purposes),
      health, sex life or sexual orientation. We also include personal data
      about children (under 16 years or age) and payment card information
      in this category.
      For more details, see the Information Commissioner's definition:
      https://ico.org.uk/for-organisations/guide-to-the-general-data-protection-regulation-gdpr/what-is-personal-data/what-is-personal-data/.
    fieldset: personalData
  piiSources:
    type: System
    direction: incoming
    label: PII sources
    relationship: PII_DATA_FLOW
    description: |
      Systems that produce/store PII data that is used by this system (other kinds of data flow do not need to be noted here).
    fieldset: personalData
    hasMany: true
  piiDestinations:
    type: System
    direction: outgoing
    label: PII destinations
    relationship: PII_DATA_FLOW
    description: |
      Systems that consume PII data that is stored in/processed by this system (other kinds of data flow do not need to be noted here).
    fieldset: personalData
    hasMany: true
  canDownloadPersonalData:
    type: Boolean
    canFilter: true
    label: Downloadable personal data
    description: Does the system allow users to download personal data?
    fieldset: personalData
  canContactIndividuals:
    type: Boolean
    canFilter: true
    label: Contactable individuals
    description: Does the system have the capability to contact individuals?
    fieldset: personalData
  gdprRetentionProcess:
    type: GDPRProcess
    label: Retention process
    description: Type of process used to handle GDPR data retention.
    fieldset: personalData
    canFilter: true
  gdprErasureProcess:
    type: GDPRProcess
    label: Erasure process
    description: Type of process used to handle GDPR data erasure requests.
    fieldset: personalData
    canFilter: true
  risk:
    type: Paragraph
    label: Data - more information
    description: More details of what kind of data is held/processesed in this system, and what the associated risks are.
    fieldset: personalData
  lifecycleStage:
    type: SystemLifecycle
    canFilter: true
    isCore: true
    label: Lifecycle stage
    description: The system lifecycle stage of the system.
    fieldset: general
  SF_ID:
    type: Word
    canFilter: true
    label: Salesforce ID
    description: ID of the system in salesforce **DO NOT EDIT**.
    autoPopulated: true
  architectureDiagram:
    type: Document
    label: Architecture Diagram
    description: A diagram of the system's architecture (either a link to one or embedded directly).
    fieldset: self
  troubleshooting:
    type: Document
    label: Troubleshooting
    description: Guidance for troubleshooting problems with the system.
    fieldset: self
  monitoring:
    type: Document
    label: Bespoke Monitoring
    description: Details of any monitoring the system has.
    fieldset: monitoring
  failoverArchitectureType:
    type: FailoverArchitectureType
    canFilter: true
    label: Type of Failover Architecture
    description: The architecture that enables failover.
    fieldset: failover
  failoverProcessType:
    type: ProcessType
    canFilter: true
    label: Type of Failover Process
    description: The mechanism used to achieve a failover.
    fieldset: failover
  failbackProcessType:
    type: ProcessType
    canFilter: true
    label: Type of Failback Process
    description: The mechanism used to achieve a failback.
    fieldset: failover
  failoverDetails:
    type: Document
    label: Failover Details
    description: The actions require to fail the system from one region to another. Either provide a set of numbered steps or a link to a detailed process that operations can follow.
    fieldset: failover
  dataRecoveryProcessType:
    type: ProcessType
    canFilter: true
    label: Type of Data Recovery Process
    description: The mechanism used to achieve a data recovery.
    fieldset: dataRecovery
  dataRecoveryDetails:
    type: Document
    label: Data Recovery Details
    description: The actions require to restore the data for the system. Either provide a set of numbered steps or a link to a detailed process that operations can follow.
    fieldset: dataRecovery
  releaseProcessType:
    type: ProcessType
    canFilter: true
    label: Type of Release Process
    description: The mechanism used to achieve a release.
    fieldset: release
  rollbackProcessType:
    type: ProcessType
    canFilter: true
    label: Type of Rollback Process
    description: The mechanism used to reverse a release.
    fieldset: release
  releaseDetails:
    type: Document
    label: Release Details
    description: The actions require to deploy a new version of the system. Either provide a set of numbered steps or a link to a detailed process that operations can follow.
    fieldset: release
  credentialsRefreshProcessType:
    type: ProcessType
    canFilter: true
    label: Type of Credentials Refresh Process
    description: The mechanism used to achieve a change in credentials.
    fieldset: credentialRefresh
  credentialsRefreshDetails:
    type: Document
    label: Credentials Refresh Details
    description: The actions require to change the credentials used by the system. Either provide a set of numbered steps or a link to a detailed process that operations can follow.
    fieldset: credentialRefresh
  moreInformation:
    type: Document
    label: More Information
    description: Any additional information about the system.
    fieldset: self
  stakeholders:
    type: Person
    direction: outgoing
    label: Stakeholders
    relationship: HAS_STAKEHOLDER
    description: The system's stakeholders.
    fieldset: ownership
    hasMany: true
  repositories:
    type: Repository
    direction: outgoing
    label: Repositories
    relationship: HAS_REPO
    fieldset: network
    description: The repositories which store the system's source code.
    hasMany: true
  monitoredBy:
    type: Healthcheck
    direction: outgoing
    label: Monitored by
    relationship: MONITORED_BY
    deprecationReason: 'Replaced by healthchecks property'
    description: Endpoints which monitor this system.
    hasMany: true
  healthchecks:
    type: Healthcheck
    direction: outgoing
    label: Healthchecks
    relationship: MONITORED_BY
    description: Healthchecks which are used to monitor this system.
    hasMany: true
    fieldset: monitoring
  deliveredBy:
    type: Team
    direction: outgoing
    label: Delivered by team
    relationship: DELIVERED_BY
    description: The team which delivers the system.
    fieldset: ownership
  supportedBy:
    type: Team
    direction: outgoing
    label: Supported by team
    relationship: SUPPORTED_BY
    description: The team which supports the system.
    fieldset: ownership
  technicalOwner:
    type: Person
    direction: outgoing
    label: Technical owner
    relationship: HAS_TECHNICAL_OWNER
    description: |
      The individual responsible for technical aspects of this system
      (optional - if absent, assume the tech lead of the delivery team is
      responsible).
    hasMany: false
    fieldset: ownership
  knownAboutBy:
    type: Person
    direction: outgoing
    label: Known about by
    relationship: KNOWN_ABOUT_BY
    description: People who know about the system.
    fieldset: ownership
    hasMany: true
  dependencies:
    type: System
    direction: outgoing
    label: Dependencies
    relationship: DEPENDS_ON
    description: The other systems the system directly depends on.
    hasMany: true
    fieldset: network
  recursiveDependencies:
    type: System
    direction: outgoing
    label: Recursive dependencies
    relationship: DEPENDS_ON
    description: 'The other systems the system depends on, either directly or indirectly.'
    hasMany: true
    isRecursive: true
    fieldset: network
  dependents:
    type: System
    direction: incoming
    label: Dependents
    relationship: DEPENDS_ON
    description: The other systems which directly depend on this system.
    hasMany: true
    fieldset: network
  recursiveDependents:
    type: System
    direction: incoming
    label: Recursive dependents
    relationship: DEPENDS_ON
    description: >-
      The other systems which depend on this system, either directly or
      indirectly.
    hasMany: true
    isRecursive: true
    fieldset: network
  dependentProducts:
    type: Product
    direction: incoming
    label: Dependent products
    relationship: DEPENDS_ON
    description: Products which depend on this system.
    hasMany: true
    fieldset: network
  recursiveDependentProducts:
    type: Product
    direction: incoming
    label: Recursive dependent products
    relationship: DEPENDS_ON
    description: 'The products which depend on this system, either directly or indirectly.'
    hasMany: true
    isRecursive: true
    fieldset: network
  stores:
    type: Repository
    direction: incoming
    label: Repositories
    relationship: STORED_IN
    description: 'If the system is a VCS, the repositories it stores.'
    deprecationReason: 'Of little value to model as a relationship; repositories will have a property on them detailing whether they are stored in bitbucket or github'
    hasMany: true
    fieldset: network
  replaces:
    type: System
    direction: outgoing
    label: Replaces systems
    relationship: REPLACES
    description: System(s) that are, or will be, replaced, at least in part, by this system.
    hasMany: true
    fieldset: network
  replacedBy:
    type: System
    direction: incoming
    label: Replaced by systems
    relationship: REPLACES
    description: System(s) that do, or will, replace all or part of this system.
    hasMany: true
    fieldset: network
  lastServiceReviewDate:
    type: Date
    description: The date that Operations last reviewed this system.
    label: Last review date
fieldsets:
  general:
    heading: General information
  ownership:
    heading: Ownership & knowledge
  failover:
    heading: Failover
  dataRecovery:
    heading: Data recovery
  release:
    heading: Release
  credentialRefresh:
    heading: Credentials refresh
  personalData:
    heading: Personal Identifiable Data (PII)
  monitoring:
    heading: Monitoring
  network:
    heading: Related resources
